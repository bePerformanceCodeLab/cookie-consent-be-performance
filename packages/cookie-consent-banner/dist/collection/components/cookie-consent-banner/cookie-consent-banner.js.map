{"version":3,"file":"cookie-consent-banner.js","sourceRoot":"","sources":["../../../src/components/cookie-consent-banner/cookie-consent-banner.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-return,no-unused-vars,@typescript-eslint/no-unused-vars */\n// https://github.com/ionic-team/stencil/blob/master/BREAKING_CHANGES.md\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  Listen,\n  h,\n  State,\n  Prop,\n  JSX,\n} from \"@stencil/core\";\nimport { CategoryItem, CookieAttributes } from \"./types\";\nimport { getCookie } from \"../../utils/parseCookies\";\nimport { defaultCookieAttributes, safeCookie } from \"../../utils/safeCookie\";\n\n@Component({\n  tag: \"cookie-consent-banner\",\n  styleUrl: \"cookie-consent-banner.css\",\n  shadow: true,\n})\nexport class CookieConsentBanner {\n  // ===========================================================================\n  // PROPS\n  // ===========================================================================\n\n  // Available Categories\n  @Prop() public availableCategories: CategoryItem[] = [];\n\n  // Overwrite Consent Cookie Name\n  @Prop() public cookieName = \"cookies_accepted_categories\";\n\n  // Overwrite Consent Cookie Attributes\n  @Prop() public cookieAttributes: CookieAttributes = defaultCookieAttributes;\n\n  // Site Cookies will be deleted if consent for any category is withdrawn. Set to true to disable behaviour.\n  @Prop() public disableResetSiteCookiesOnConsentWithdrawn = false;\n\n  // A cookie banner could have impact on the Web Vitals / LCP measurement\n  // See #7\n  @Prop() public disableSlideInAnimation = false;\n\n  // Add Headline\n  @Prop() public headline: string;\n\n  // BTN Label Accept and Continue\n  @Prop() public btnLabelAcceptAndContinue: string;\n\n  // BTN Label Only essential and Continue\n  @Prop() public btnLabelOnlyEssentialAndContinue: string;\n\n  // BTN Label Select all and Continue\n  @Prop() public btnLabelSelectAllAndContinue: string;\n\n  // BTN Label Persist selection and Continue\n  @Prop() public btnLabelPersistSelectionAndContinue: string;\n\n  // CONTENT Settings description\n  @Prop() public contentSettingsDescription: string;\n\n  // Event Handler\n  @Prop() public handlePreferencesRestored: ({\n    acceptedCategories,\n  }: {\n    acceptedCategories: string[];\n  }) => void;\n\n  // Event Handler\n  @Prop() public handlePreferencesUpdated: ({\n    acceptedCategories,\n  }: {\n    acceptedCategories: string[];\n  }) => void;\n\n  // =============================================================================\n  // STATES\n  // =============================================================================\n\n  @State() public isShown = false;\n\n  @State() public acceptedCategoriesNext: string[] = [];\n\n  @State() public acceptedCategoriesPersisted: string[] = [];\n\n  @State() public isShownSettings = false;\n\n  // Trigger isShown via Event\n  @Listen(\"cookie_consent_show\", { target: \"document\" })\n  public eventListenerShow(): void {\n    this.isShown = true;\n  }\n\n  // Trigger isShown and isShownSettings via Event\n  @Listen(\"cookie_consent_details_show\", { target: \"document\" })\n  public eventListenerDetailsShow(): void {\n    this.isShown = true;\n    this.isShownSettings = true;\n  }\n\n  // ===========================================================================\n  // EVENTS\n  // ===========================================================================\n\n  // Cookie Consent has been given previously\n  @Event({\n    eventName: \"cookie_consent_preferences_restored\",\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  public eventCookieConsentRestored: EventEmitter;\n\n  // Cookie Consent updated or initially given\n  @Event({\n    eventName: \"cookie_consent_preferences_updated\",\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  public eventCookieConsentUpdated: EventEmitter;\n\n  // ===========================================================================\n\n  /* eslint-disable-next-line @typescript-eslint/explicit-member-accessibility */\n  public componentWillLoad(): void {\n    const defaultCookies = this.availableCategories\n      .filter((category) => category.isMandatory)\n      .map((category) => category.key);\n\n    let cookieValues: string[] = [];\n\n    if (document.cookie) {\n      const cookieValueString = getCookie(this.cookieName);\n      cookieValues = cookieValueString ? cookieValueString.split(\",\") : [];\n    }\n\n    if (cookieValues.length === 0) {\n      this.isShown = true;\n      // Nothing stored yet\n      this.acceptedCategoriesPersisted = defaultCookies;\n      this.acceptedCategoriesNext = defaultCookies;\n    } else {\n      this.acceptedCategoriesPersisted = cookieValues;\n      this.acceptedCategoriesNext = cookieValues;\n      this.eventCookieConsentRestored.emit({\n        acceptedCategories: cookieValues,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (this.handlePreferencesRestored) {\n        this.handlePreferencesRestored({\n          acceptedCategories: cookieValues,\n        });\n      }\n    }\n  }\n\n  private persistSelection(): void {\n    // Need to reset cookies?\n    const consentWithdrawn = Boolean(\n      this.acceptedCategoriesPersisted.filter(\n        (x) => !this.acceptedCategoriesNext.includes(x),\n      ).length,\n    );\n    // Reset cookies\n    if (!this.disableResetSiteCookiesOnConsentWithdrawn && consentWithdrawn) {\n      document.cookie.split(\";\").forEach((c) => {\n        document.cookie = c\n          .replace(/^ +/, \"\")\n          .replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n      });\n    }\n\n    this.acceptedCategoriesPersisted = this.acceptedCategoriesNext;\n    const cookieValue = this.acceptedCategoriesNext.join(\",\");\n    safeCookie(this.cookieName, cookieValue, this.cookieAttributes);\n    this.eventCookieConsentUpdated.emit({\n      acceptedCategories: this.acceptedCategoriesPersisted,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (this.handlePreferencesUpdated) {\n      this.handlePreferencesUpdated({\n        acceptedCategories: this.acceptedCategoriesPersisted,\n      });\n    }\n    this.isShown = false;\n  }\n\n  private handleAcceptAll(): void {\n    this.acceptedCategoriesNext = this.availableCategories.map(\n      (category) => category.key,\n    );\n    this.persistSelection();\n  }\n\n  private handleEssentialsOnly(): void {\n    const mandatoryCategories = this.availableCategories.filter(\n      (category) => category.isMandatory,\n    );\n    this.acceptedCategoriesNext = mandatoryCategories.map(\n      (category) => category.key,\n    );\n    this.persistSelection();\n  }\n\n  public render(): JSX.Element | null {\n    if (!this.isShown) {\n      return null;\n    }\n    return (\n      <div\n        class={this.disableSlideInAnimation ? \"cc cc_disable-slide-in\" : \"cc\"}\n      >\n        <div\n          class=\"cc_body\"\n          role=\"dialog\"\n          part=\"body\"\n          aria-modal=\"true\"\n          aria-label=\"Cookie Consent Management\"\n          tabIndex={-1}\n        >\n          {Boolean(this.headline) && (\n            <h1 class=\"cc_headline\" part=\"headline\">\n              {this.headline}\n            </h1>\n          )}\n          <form>\n            <p class=\"cc_text\" part=\"description-main\">\n              <slot />\n            </p>\n            {Boolean(this.isShownSettings) && (\n              <div class=\"cc_settings\">\n                <p part=\"description-settings\" class=\"cc_settings_description\">\n                  {this.contentSettingsDescription}\n                </p>\n                <div class=\"cc_checkboxes\">\n                  {this.availableCategories.map((category) => (\n                    <label\n                      part=\"checkbox-label\"\n                      class=\"cc_checkboxes_item\"\n                      htmlFor={`check-category-${category.label}`}\n                    >\n                      <input\n                        part=\"checkbox\"\n                        id={`check-category-${category.label}`}\n                        type=\"checkbox\"\n                        disabled={category.isMandatory ?? false}\n                        checked={this.acceptedCategoriesNext.includes(\n                          category.key,\n                        )}\n                        onChange={(event): void => {\n                          const isChecked = (\n                            event.currentTarget as HTMLInputElement\n                          ).checked;\n                          if (isChecked) {\n                            this.acceptedCategoriesNext = [\n                              ...this.acceptedCategoriesNext,\n                              category.key,\n                            ];\n                          } else {\n                            this.acceptedCategoriesNext =\n                              this.acceptedCategoriesNext.filter(\n                                (item) => item !== category.key,\n                              );\n                          }\n                        }}\n                      />{\" \"}\n                      {category.label}\n                      {\": \"}\n                      {category.description}\n                    </label>\n                  ))}\n                </div>\n              </div>\n            )}\n            <div class=\"cc_buttons\">\n              {Boolean(this.isShownSettings) && (\n                <button\n                  part=\"button-persist-selection\"\n                  type=\"submit\"\n                  class=\"btn_persist_selection secondary\"\n                  onClick={() => this.persistSelection()}\n                  onKeyPress={() => this.persistSelection()}\n                >\n                  {this.btnLabelPersistSelectionAndContinue}\n                </button>\n              )}\n              {!this.isShownSettings &&\n                !!this.btnLabelOnlyEssentialAndContinue && (\n                  <button\n                    part=\"button-essential-only\"\n                    class=\"btn_essentials_only secondary\"\n                    type=\"button\"\n                    onClick={() => this.handleEssentialsOnly()}\n                    onKeyPress={() => this.handleEssentialsOnly()}\n                  >\n                    {this.btnLabelOnlyEssentialAndContinue}\n                  </button>\n                )}\n              <button\n                part=\"button-accept-all\"\n                data-test-id=\"accept-all-btn\"\n                onClick={() => this.handleAcceptAll()}\n                onKeyPress={() => this.handleAcceptAll()}\n                type=\"button\"\n                class=\"btn_accept_all\"\n              >\n                {!this.isShownSettings\n                  ? this.btnLabelAcceptAndContinue\n                  : this.btnLabelSelectAllAndContinue}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n"]}